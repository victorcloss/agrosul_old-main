{
  "src/lib/components/DashPlayer.react.js": {
    "description": "A Dash component for playing a variety of URLs, including file paths,\nYouTube, Facebook, Twitch, SoundCloud, Streamable, Vimeo, Wistia, Mixcloud,\nand DailyMotion.",
    "displayName": "DashPlayer",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Used to identify the CSS class of the Dash Player component"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"
      },
      "url": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The url of the media to be played."
      },
      "playing": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether or not the media is currently playing. Can be set to True\nor False to play and pause the media, respectively.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "loop": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether or not the media will loop once the player reaches the end.\nCan be set to True or False to set looping on or off, respectively.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "controls": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true or false to display native player controls\nVimeo, Twitch and Wistia player will always display controls",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "volume": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "A number between 0 and 1 representing the volume of the player.\nIf set to None, Dash Player ises default volume on all players.",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "muted": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to true or false to mute or unmute player volume, respectively.\nOnly works if volume is set.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "playbackRate": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Set the playback rate of the player\nOnly supported by YouTube, Wistia, and file paths.",
        "defaultValue": {
          "value": "1",
          "computed": false
        }
      },
      "width": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A number or string representing the pixel width of the player.",
        "defaultValue": {
          "value": "'640px'",
          "computed": false
        }
      },
      "height": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A number or string representing the pixel height of the player.",
        "defaultValue": {
          "value": "'360px'",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Optional additional CSS styles. If width or height are supplied within style,\nthen this will override the component-level width or height",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "playsinline": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Applies the html5 playsinline attribute where supported, which allows\nvideos to be played inline and will not automatically enter fullscreen\nmode when playback begins (for iOS).",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "currentTime": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Returns the number of seconds that have been played."
      },
      "secondsLoaded": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Returns the number of seconds that have been loaded."
      },
      "duration": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Returns the duration (in seconds) of the currently playing media."
      },
      "intervalCurrentTime": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Interval in milliseconds at which currentTime prop is updated.",
        "defaultValue": {
          "value": "100",
          "computed": false
        }
      },
      "intervalSecondsLoaded": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Interval in milliseconds at which secondsLoaded prop is updated.",
        "defaultValue": {
          "value": "500",
          "computed": false
        }
      },
      "intervalDuration": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Interval in milliseconds at which duration prop is updated.",
        "defaultValue": {
          "value": "500",
          "computed": false
        }
      },
      "seekTo": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Seek to the given number of seconds, or fraction if amount is between 0 and 1",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      }
    }
  }
}